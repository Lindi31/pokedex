{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nimport { frame } from '../frameloop/frame.mjs';\nfunction useInstantTransition() {\n  _s();\n  const [forceUpdate, forcedRenderCount] = useForceUpdate();\n  const startInstantLayoutTransition = useInstantLayoutTransition();\n  const unlockOnFrameRef = useRef();\n  useEffect(() => {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    frame.postRender(() => frame.postRender(() => {\n      /**\n       * If the callback has been called again after the effect\n       * triggered this 2 frame delay, don't unblock animations. This\n       * prevents the previous effect from unblocking the current\n       * instant transition too soon. This becomes more likely when\n       * used in conjunction with React.startTransition().\n       */\n      if (forcedRenderCount !== unlockOnFrameRef.current) return;\n      instantAnimationState.current = false;\n    }));\n  }, [forcedRenderCount]);\n  return callback => {\n    startInstantLayoutTransition(() => {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n      unlockOnFrameRef.current = forcedRenderCount + 1;\n    });\n  };\n}\n_s(useInstantTransition, \"yLohngYJnlTdFBddQXlL3rB3xdU=\", false, function () {\n  return [useForceUpdate, useInstantLayoutTransition];\n});\nfunction disableInstantTransitions() {\n  instantAnimationState.current = false;\n}\nexport { disableInstantTransitions, useInstantTransition };","map":{"version":3,"names":["useRef","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","frame","useInstantTransition","_s","forceUpdate","forcedRenderCount","startInstantLayoutTransition","unlockOnFrameRef","postRender","current","callback","disableInstantTransitions"],"sources":["C:/Users/arlind/Documents/GitHub/pokedex/pokedex/src/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    const unlockOnFrameRef = useRef();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        frame.postRender(() => frame.postRender(() => {\n            /**\n             * If the callback has been called again after the effect\n             * triggered this 2 frame delay, don't unblock animations. This\n             * prevents the previous effect from unblocking the current\n             * instant transition too soon. This becomes more likely when\n             * used in conjunction with React.startTransition().\n             */\n            if (forcedRenderCount !== unlockOnFrameRef.current)\n                return;\n            instantAnimationState.current = false;\n        }));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n            unlockOnFrameRef.current = forcedRenderCount + 1;\n        });\n    };\n}\nfunction disableInstantTransitions() {\n    instantAnimationState.current = false;\n}\n\nexport { disableInstantTransitions, useInstantTransition };\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,0BAA0B,QAAQ,iDAAiD;AAC5F,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,qBAAqB,QAAQ,oCAAoC;AAC1E,SAASC,KAAK,QAAQ,wBAAwB;AAE9C,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,iBAAiB,CAAC,GAAGN,cAAc,CAAC,CAAC;EACzD,MAAMO,4BAA4B,GAAGR,0BAA0B,CAAC,CAAC;EACjE,MAAMS,gBAAgB,GAAGX,MAAM,CAAC,CAAC;EACjCC,SAAS,CAAC,MAAM;IACZ;AACR;AACA;IACQI,KAAK,CAACO,UAAU,CAAC,MAAMP,KAAK,CAACO,UAAU,CAAC,MAAM;MAC1C;AACZ;AACA;AACA;AACA;AACA;AACA;MACY,IAAIH,iBAAiB,KAAKE,gBAAgB,CAACE,OAAO,EAC9C;MACJT,qBAAqB,CAACS,OAAO,GAAG,KAAK;IACzC,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EACvB,OAAQK,QAAQ,IAAK;IACjBJ,4BAA4B,CAAC,MAAM;MAC/BN,qBAAqB,CAACS,OAAO,GAAG,IAAI;MACpCL,WAAW,CAAC,CAAC;MACbM,QAAQ,CAAC,CAAC;MACVH,gBAAgB,CAACE,OAAO,GAAGJ,iBAAiB,GAAG,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;AACL;AAACF,EAAA,CA7BQD,oBAAoB;EAAA,QACgBH,cAAc,EAClBD,0BAA0B;AAAA;AA4BnE,SAASa,yBAAyBA,CAAA,EAAG;EACjCX,qBAAqB,CAACS,OAAO,GAAG,KAAK;AACzC;AAEA,SAASE,yBAAyB,EAAET,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}