{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({\n  children,\n  features,\n  strict = false\n}) {\n  _s();\n  const [, setIsLoaded] = useState(!isLazyBundle(features));\n  const loadedRenderer = useRef(undefined);\n  /**\n   * If this is a synchronous load, load features immediately\n   */\n  if (!isLazyBundle(features)) {\n    const {\n      renderer,\n      ...loadedFeatures\n    } = features;\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n  useEffect(() => {\n    if (isLazyBundle(features)) {\n      features().then(({\n        renderer,\n        ...loadedFeatures\n      }) => {\n        loadFeatures(loadedFeatures);\n        loadedRenderer.current = renderer;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(LazyContext.Provider, {\n    value: {\n      renderer: loadedRenderer.current,\n      strict\n    }\n  }, children);\n}\n_s(LazyMotion, \"PtmiYzdlQDM7I6rgzEXQo0bRWz0=\");\n_c = LazyMotion;\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\nexport { LazyMotion };\nvar _c;\n$RefreshReg$(_c, \"LazyMotion\");","map":{"version":3,"names":["React","useState","useRef","useEffect","LazyContext","loadFeatures","LazyMotion","children","features","strict","_s","setIsLoaded","isLazyBundle","loadedRenderer","undefined","renderer","loadedFeatures","current","then","createElement","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/arlind/Documents/GitHub/pokedex/pokedex/src/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs"],"sourcesContent":["import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,YAAY,QAAQ,yCAAyC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,MAAM,GAAG;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,GAAGC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAACW,YAAY,CAACJ,QAAQ,CAAC,CAAC;EACzD,MAAMK,cAAc,GAAGX,MAAM,CAACY,SAAS,CAAC;EACxC;AACJ;AACA;EACI,IAAI,CAACF,YAAY,CAACJ,QAAQ,CAAC,EAAE;IACzB,MAAM;MAAEO,QAAQ;MAAE,GAAGC;IAAe,CAAC,GAAGR,QAAQ;IAChDK,cAAc,CAACI,OAAO,GAAGF,QAAQ;IACjCV,YAAY,CAACW,cAAc,CAAC;EAChC;EACAb,SAAS,CAAC,MAAM;IACZ,IAAIS,YAAY,CAACJ,QAAQ,CAAC,EAAE;MACxBA,QAAQ,CAAC,CAAC,CAACU,IAAI,CAAC,CAAC;QAAEH,QAAQ;QAAE,GAAGC;MAAe,CAAC,KAAK;QACjDX,YAAY,CAACW,cAAc,CAAC;QAC5BH,cAAc,CAACI,OAAO,GAAGF,QAAQ;QACjCJ,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBAAQX,KAAK,CAACmB,aAAa,CAACf,WAAW,CAACgB,QAAQ,EAAE;IAAEC,KAAK,EAAE;MAAEN,QAAQ,EAAEF,cAAc,CAACI,OAAO;MAAER;IAAO;EAAE,CAAC,EAAEF,QAAQ,CAAC;AACxH;AAACG,EAAA,CArBQJ,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAsBnB,SAASM,YAAYA,CAACJ,QAAQ,EAAE;EAC5B,OAAO,OAAOA,QAAQ,KAAK,UAAU;AACzC;AAEA,SAASF,UAAU;AAAG,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}