{"ast":null,"code":"export const fetchPokemonList = async () => {\n  const response = await fetch('https://pokeapi.co/api/v2/pokemon/?limit=151');\n  const data = await response.json();\n  const pokemonDetails = await Promise.all(data.results.map(async pokemon => {\n    const pokemonResponse = await fetch(pokemon.url);\n    const pokemonData = await pokemonResponse.json();\n\n    // Abfrage der Pokémon-Art für englische und deutsche Namen\n    const speciesResponse = await fetch(pokemonData.species.url);\n    const speciesData = await speciesResponse.json();\n    const englishName = speciesData.names.find(name => name.language.name === 'en').name;\n    const germanName = speciesData.names.find(name => name.language.name === 'de').name;\n    return {\n      names: {\n        en: englishName,\n        de: germanName\n      },\n      url: pokemon.url,\n      imageUrl: pokemonData.sprites.front_default\n    };\n  }));\n  return pokemonDetails;\n};\nexport const fetchPokemonDetails = async url => {\n  const response = await fetch(url);\n  const data = await response.json();\n  const imageUrl = data.sprites.front_default;\n\n  // Abfrage der Pokémon-Art für englische und deutsche Namen\n  const speciesResponse = await fetch(data.species.url);\n  const speciesData = await speciesResponse.json();\n  const englishName = speciesData.names.find(name => name.language.name === 'en').name;\n  const germanName = speciesData.names.find(name => name.language.name === 'de').name;\n  return {\n    ...data,\n    names: {\n      en: englishName,\n      de: germanName\n    },\n    imageUrl\n  };\n};","map":{"version":3,"names":["fetchPokemonList","response","fetch","data","json","pokemonDetails","Promise","all","results","map","pokemon","pokemonResponse","url","pokemonData","speciesResponse","species","speciesData","englishName","names","find","name","language","germanName","en","de","imageUrl","sprites","front_default","fetchPokemonDetails"],"sources":["C:/Users/arlind/Documents/GitHub/pokedex/pokedex/src/services/pokeapi.js"],"sourcesContent":["export const fetchPokemonList = async () => {\r\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon/?limit=151');\r\n    const data = await response.json();\r\n    const pokemonDetails = await Promise.all(\r\n      data.results.map(async (pokemon) => {\r\n        const pokemonResponse = await fetch(pokemon.url);\r\n        const pokemonData = await pokemonResponse.json();\r\n  \r\n        // Abfrage der Pokémon-Art für englische und deutsche Namen\r\n        const speciesResponse = await fetch(pokemonData.species.url);\r\n        const speciesData = await speciesResponse.json();\r\n        const englishName = speciesData.names.find(name => name.language.name === 'en').name;\r\n        const germanName = speciesData.names.find(name => name.language.name === 'de').name;\r\n  \r\n        return {\r\n          names: {\r\n            en: englishName,\r\n            de: germanName\r\n          },\r\n          url: pokemon.url,\r\n          imageUrl: pokemonData.sprites.front_default\r\n        };\r\n      })\r\n    );\r\n    return pokemonDetails;\r\n  };\r\n  \r\n  export const fetchPokemonDetails = async (url) => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const imageUrl = data.sprites.front_default;\r\n  \r\n    // Abfrage der Pokémon-Art für englische und deutsche Namen\r\n    const speciesResponse = await fetch(data.species.url);\r\n    const speciesData = await speciesResponse.json();\r\n    const englishName = speciesData.names.find(name => name.language.name === 'en').name;\r\n    const germanName = speciesData.names.find(name => name.language.name === 'de').name;\r\n  \r\n    return {\r\n      ...data,\r\n      names: {\r\n        en: englishName,\r\n        de: germanName\r\n      },\r\n      imageUrl\r\n    };\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;EAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCJ,IAAI,CAACK,OAAO,CAACC,GAAG,CAAC,MAAOC,OAAO,IAAK;IAClC,MAAMC,eAAe,GAAG,MAAMT,KAAK,CAACQ,OAAO,CAACE,GAAG,CAAC;IAChD,MAAMC,WAAW,GAAG,MAAMF,eAAe,CAACP,IAAI,CAAC,CAAC;;IAEhD;IACA,MAAMU,eAAe,GAAG,MAAMZ,KAAK,CAACW,WAAW,CAACE,OAAO,CAACH,GAAG,CAAC;IAC5D,MAAMI,WAAW,GAAG,MAAMF,eAAe,CAACV,IAAI,CAAC,CAAC;IAChD,MAAMa,WAAW,GAAGD,WAAW,CAACE,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IAAI,CAAC,CAACA,IAAI;IACpF,MAAME,UAAU,GAAGN,WAAW,CAACE,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IAAI,CAAC,CAACA,IAAI;IAEnF,OAAO;MACLF,KAAK,EAAE;QACLK,EAAE,EAAEN,WAAW;QACfO,EAAE,EAAEF;MACN,CAAC;MACDV,GAAG,EAAEF,OAAO,CAACE,GAAG;MAChBa,QAAQ,EAAEZ,WAAW,CAACa,OAAO,CAACC;IAChC,CAAC;EACH,CAAC,CACH,CAAC;EACD,OAAOtB,cAAc;AACvB,CAAC;AAED,OAAO,MAAMuB,mBAAmB,GAAG,MAAOhB,GAAG,IAAK;EAChD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACU,GAAG,CAAC;EACjC,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,MAAMqB,QAAQ,GAAGtB,IAAI,CAACuB,OAAO,CAACC,aAAa;;EAE3C;EACA,MAAMb,eAAe,GAAG,MAAMZ,KAAK,CAACC,IAAI,CAACY,OAAO,CAACH,GAAG,CAAC;EACrD,MAAMI,WAAW,GAAG,MAAMF,eAAe,CAACV,IAAI,CAAC,CAAC;EAChD,MAAMa,WAAW,GAAGD,WAAW,CAACE,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IAAI,CAAC,CAACA,IAAI;EACpF,MAAME,UAAU,GAAGN,WAAW,CAACE,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IAAI,CAAC,CAACA,IAAI;EAEnF,OAAO;IACL,GAAGjB,IAAI;IACPe,KAAK,EAAE;MACLK,EAAE,EAAEN,WAAW;MACfO,EAAE,EAAEF;IACN,CAAC;IACDG;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}